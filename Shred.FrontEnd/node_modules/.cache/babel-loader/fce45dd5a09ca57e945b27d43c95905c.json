{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\AreaCalendarWeek.js\";\nimport React from \"react\";\nimport Band from \"./Band\";\nimport moment from \"moment\";\nimport styles from \"./AreaCalendarWeek.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as action from '../../redux/action/ActionCreators';\n\nfunction AreaCalendarWeek({\n  currentMonth,\n  activeMonth,\n  currentDate,\n  isActiveDay,\n  events,\n  handleChangeActiveDay\n}) {\n  const renderCalendar = () => {\n    const calendar = [];\n\n    for (let i = 1; i < (activeMonth ? 7 : 2); i++) {\n      calendar.push(renderWeek(moment(currentMonth).format(\"YYYY\"), i));\n    }\n\n    return calendar;\n  };\n\n  const renderWeek = (year, week) => {\n    const weekDays = [1, 2, 3, 4, 5, 6, 7];\n    const weekDates = weekDays.map(weekDay => weekDay);\n    return React.createElement(\"div\", {\n      key: week,\n      className: styles.weekRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, weekDates.map(item => {\n      const startMonthDay = moment(currentMonth);\n      const monthFirstDay = moment(startMonthDay).startOf(activeMonth ? \"month\" : \"week\");\n      const weekFirstday = moment(monthFirstDay).add(week - 1, \"week\").startOf(\"week\").isoWeekday(6);\n      const date = weekFirstday.add(item, \"day\");\n      return React.createElement(\"div\", {\n        key: date.format(\"D\"),\n        className: date.format(\"D MMM YY\") === isActiveDay.format(\"D MMM YY\") && date.format(\"MMM YYYY\") === startMonthDay.format(\"MMM YYYY\") ? styles.dayCellActive : styles.dayCell,\n        onClick: () => handleChangeActiveDay(date),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: date.format(\"D MMM YY\") === currentDate.format(\"D MMM YY\") ? styles.activeDate : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, activeMonth ? date.format(\"MMMM\") === startMonthDay.format(\"MMMM\") && date.format(\"D\") : date.format(\"D\")), React.createElement(Band, {\n        events: events,\n        data: date,\n        currentStateMonth: currentMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, renderCalendar());\n}\n\nAreaCalendarWeek.defaultProps = {\n  renderWeekMonth: () => {},\n  currentMonth: moment(),\n  currentDate: moment(),\n  changeActiveDay: () => {},\n  isActiveDay: moment(),\n  events: []\n};\nAreaCalendarWeek.propTypes = {\n  renderWeekMonth: PropTypes.func.isRequired,\n  changeActiveDay: PropTypes.func.isRequired,\n  events: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = store => ({\n  activeMonth: store.reducer.activeMonth,\n  currentMonth: store.reducer.currentMonth,\n  currentDate: store.reducer.currentDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleChangeActiveDay: day => dispatch(action.changeActivDayAction(day))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaCalendarWeek);","map":{"version":3,"sources":["D:/ItStep/Shrad/src/components/Calendar/AreaCalendarWeek.js"],"names":["React","Band","moment","styles","PropTypes","connect","action","AreaCalendarWeek","currentMonth","activeMonth","currentDate","isActiveDay","events","handleChangeActiveDay","renderCalendar","calendar","i","push","renderWeek","format","year","week","weekDays","weekDates","map","weekDay","weekRow","item","startMonthDay","monthFirstDay","startOf","weekFirstday","add","isoWeekday","date","dayCellActive","dayCell","activeDate","container","defaultProps","renderWeekMonth","changeActiveDay","propTypes","func","isRequired","object","mapStateToProps","store","reducer","mapDispatchToProps","dispatch","day","changeActivDayAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mCAAxB;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,YADwB;AAExBC,EAAAA,WAFwB;AAGxBC,EAAAA,WAHwB;AAIxBC,EAAAA,WAJwB;AAKxBC,EAAAA,MALwB;AAMxBC,EAAAA;AANwB,CAA1B,EAOG;AAGD,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,WAAW,GAAG,CAAH,GAAO,CAAtB,CAAjB,EAA2CO,CAAC,EAA5C,EAAgD;AAC9CD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,UAAU,CAAChB,MAAM,CAACM,YAAD,CAAN,CAAqBW,MAArB,CAA4B,MAA5B,CAAD,EAAsCH,CAAtC,CAAxB;AACD;;AACD,WAAOD,QAAP;AACD,GAND;;AAQA,QAAMG,UAAU,GAAG,CAACE,IAAD,EAAOC,IAAP,KAAgB;AACjC,UAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AACA,UAAMC,SAAS,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAIA,OAAxB,CAAlB;AACA,WACE;AAAK,MAAA,GAAG,EAAEJ,IAAV;AAAgB,MAAA,SAAS,EAAElB,MAAM,CAACuB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SAAS,CAACC,GAAV,CAAcG,IAAI,IAAI;AACrB,YAAMC,aAAa,GAAG1B,MAAM,CAACM,YAAD,CAA5B;AACA,YAAMqB,aAAa,GAAG3B,MAAM,CAAC0B,aAAD,CAAN,CAAsBE,OAAtB,CACpBrB,WAAW,GAAG,OAAH,GAAa,MADJ,CAAtB;AAGA,YAAMsB,YAAY,GAAG7B,MAAM,CAAC2B,aAAD,CAAN,CAClBG,GADkB,CACdX,IAAI,GAAG,CADO,EACJ,MADI,EAElBS,OAFkB,CAEV,MAFU,EAGlBG,UAHkB,CAGP,CAHO,CAArB;AAIA,YAAMC,IAAI,GAAGH,YAAY,CAACC,GAAb,CAAiBL,IAAjB,EAAuB,KAAvB,CAAb;AAEA,aACE;AACE,QAAA,GAAG,EAAEO,IAAI,CAACf,MAAL,CAAY,GAAZ,CADP;AAEE,QAAA,SAAS,EACPe,IAAI,CAACf,MAAL,CAAY,UAAZ,MAA4BR,WAAW,CAACQ,MAAZ,CAAmB,UAAnB,CAA5B,IACAe,IAAI,CAACf,MAAL,CAAY,UAAZ,MAA4BS,aAAa,CAACT,MAAd,CAAqB,UAArB,CAD5B,GAEIhB,MAAM,CAACgC,aAFX,GAGIhC,MAAM,CAACiC,OANf;AAQE,QAAA,OAAO,EAAE,MAAMvB,qBAAqB,CAACqB,IAAD,CARtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE;AACE,QAAA,SAAS,EACPA,IAAI,CAACf,MAAL,CAAY,UAAZ,MAA4BT,WAAW,CAACS,MAAZ,CAAmB,UAAnB,CAA5B,GACIhB,MAAM,CAACkC,UADX,GAEI,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG5B,WAAW,GACRyB,IAAI,CAACf,MAAL,CAAY,MAAZ,MAAwBS,aAAa,CAACT,MAAd,CAAqB,MAArB,CAAxB,IACAe,IAAI,CAACf,MAAL,CAAY,GAAZ,CAFQ,GAGRe,IAAI,CAACf,MAAL,CAAY,GAAZ,CAVN,CAVF,EAsBE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAEP,MADV;AAEE,QAAA,IAAI,EAAEsB,IAFR;AAGE,QAAA,iBAAiB,EAAE1B,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CADF;AA8BD,KAzCA,CADH,CADF;AA8CD,GAjDD;;AAmDA,SAAO;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACmC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCxB,cAAc,EAAjD,CAAP;AACD;;AACDP,gBAAgB,CAACgC,YAAjB,GAAgC;AAC9BC,EAAAA,eAAe,EAAE,MAAM,CAAE,CADK;AAE9BhC,EAAAA,YAAY,EAAEN,MAAM,EAFU;AAG9BQ,EAAAA,WAAW,EAAER,MAAM,EAHW;AAI9BuC,EAAAA,eAAe,EAAE,MAAM,CAAE,CAJK;AAK9B9B,EAAAA,WAAW,EAAET,MAAM,EALW;AAM9BU,EAAAA,MAAM,EAAE;AANsB,CAAhC;AASAL,gBAAgB,CAACmC,SAAjB,GAA6B;AAC3BF,EAAAA,eAAe,EAAEpC,SAAS,CAACuC,IAAV,CAAeC,UADL;AAE3BH,EAAAA,eAAe,EAAErC,SAAS,CAACuC,IAAV,CAAeC,UAFL;AAG3BhC,EAAAA,MAAM,EAAER,SAAS,CAACyC,MAAV,CAAiBD;AAHE,CAA7B;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCtC,EAAAA,WAAW,EAAEsC,KAAK,CAACC,OAAN,CAAcvC,WADK;AAEhCD,EAAAA,YAAY,EAAEuC,KAAK,CAACC,OAAN,CAAcxC,YAFI;AAGhCE,EAAAA,WAAW,EAAEqC,KAAK,CAACC,OAAN,CAActC;AAHK,CAAL,CAA7B;;AAMA,MAAMuC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrC,EAAAA,qBAAqB,EAAGsC,GAAD,IAASD,QAAQ,CAAC5C,MAAM,CAAC8C,oBAAP,CAA4BD,GAA5B,CAAD;AADF,CAAL,CAAnC;;AAIA,eAAe9C,OAAO,CAACyC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1C,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport Band from \"./Band\";\r\nimport moment from \"moment\";\r\nimport styles from \"./AreaCalendarWeek.module.sass\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from '../../redux/action/ActionCreators';\r\n\r\nfunction AreaCalendarWeek({\r\n  currentMonth,\r\n  activeMonth,\r\n  currentDate,\r\n  isActiveDay,\r\n  events,\r\n  handleChangeActiveDay\r\n}) {\r\n  \r\n\r\n  const renderCalendar = () => {\r\n    const calendar = [];\r\n    for (let i = 1; i < (activeMonth ? 7 : 2); i++) {\r\n      calendar.push(renderWeek(moment(currentMonth).format(\"YYYY\"), i));\r\n    }\r\n    return calendar;\r\n  };\r\n\r\n  const renderWeek = (year, week) => {\r\n    const weekDays = [1, 2, 3, 4, 5, 6, 7];\r\n    const weekDates = weekDays.map(weekDay => weekDay);\r\n    return (\r\n      <div key={week} className={styles.weekRow}>\r\n        {weekDates.map(item => {\r\n          const startMonthDay = moment(currentMonth);\r\n          const monthFirstDay = moment(startMonthDay).startOf(\r\n            activeMonth ? \"month\" : \"week\"\r\n          );\r\n          const weekFirstday = moment(monthFirstDay)\r\n            .add(week - 1, \"week\")\r\n            .startOf(\"week\")\r\n            .isoWeekday(6);\r\n          const date = weekFirstday.add(item, \"day\");\r\n\r\n          return (\r\n            <div\r\n              key={date.format(\"D\")}\r\n              className={\r\n                date.format(\"D MMM YY\") === isActiveDay.format(\"D MMM YY\") &&\r\n                date.format(\"MMM YYYY\") === startMonthDay.format(\"MMM YYYY\")\r\n                  ? styles.dayCellActive\r\n                  : styles.dayCell\r\n              }\r\n              onClick={() => handleChangeActiveDay(date)}\r\n            >\r\n              <p\r\n                className={\r\n                  date.format(\"D MMM YY\") === currentDate.format(\"D MMM YY\")\r\n                    ? styles.activeDate\r\n                    : \"\"\r\n                }\r\n              >\r\n                {activeMonth\r\n                  ? date.format(\"MMMM\") === startMonthDay.format(\"MMMM\") &&\r\n                    date.format(\"D\")\r\n                  : date.format(\"D\")}\r\n              </p>\r\n              <Band\r\n                events={events}\r\n                data={date}\r\n                currentStateMonth={currentMonth}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div className={styles.container}>{renderCalendar()}</div>;\r\n}\r\nAreaCalendarWeek.defaultProps = {\r\n  renderWeekMonth: () => {},\r\n  currentMonth: moment(),\r\n  currentDate: moment(),\r\n  changeActiveDay: () => {},\r\n  isActiveDay: moment(),\r\n  events: []\r\n};\r\n\r\nAreaCalendarWeek.propTypes = {\r\n  renderWeekMonth: PropTypes.func.isRequired,\r\n  changeActiveDay: PropTypes.func.isRequired,\r\n  events: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  activeMonth: store.reducer.activeMonth,\r\n  currentMonth: store.reducer.currentMonth,\r\n  currentDate: store.reducer.currentDate\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeActiveDay: (day) => dispatch(action.changeActivDayAction(day))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaCalendarWeek);\r\n"]},"metadata":{},"sourceType":"module"}