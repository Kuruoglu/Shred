{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\components\\\\AreaWeekMonth.js\";\nimport React from \"react\";\nimport styles from \"./AreaWeekMonth.module.sass\";\nimport { connect } from \"react-redux\";\nimport * as action from \"../../../redux/action/ActionCreators\";\n\nfunction AreaWeekMonth({\n  changeActiveMonth,\n  isOpen,\n  activeMonth,\n  changeIsOpen\n}) {\n  return React.createElement(React.Fragment, null, isOpen && React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: activeMonth ? changeActiveMonth : changeIsOpen,\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"This week\"), React.createElement(\"button\", {\n    onClick: activeMonth ? changeIsOpen : changeActiveMonth,\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"This month\")));\n}\n\nconst mapStateToProps = store => ({\n  isOpen: store.reducer.isOpen,\n  activeMonth: store.reducer.activeMonth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeActiveMonth: () => dispatch(action.activeMonthWeekSwitchAction()),\n  changeIsOpen: () => dispatch(action.openTabWeekMonthAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaWeekMonth);","map":{"version":3,"sources":["D:/ItStep/Shrad/src/components/Calendar/components/AreaWeekMonth.js"],"names":["React","styles","connect","action","AreaWeekMonth","changeActiveMonth","isOpen","activeMonth","changeIsOpen","container","button","mapStateToProps","store","reducer","mapDispatchToProps","dispatch","activeMonthWeekSwitchAction","openTabWeekMonthAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sCAAxB;;AAEA,SAASC,aAAT,CAAuB;AAErBC,EAAAA,iBAFqB;AAGrBC,EAAAA,MAHqB;AAIrBC,EAAAA,WAJqB;AAKrBC,EAAAA;AALqB,CAAvB,EAMG;AACD,SACE,0CACGF,MAAM,IACL;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACQ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEF,WAAW,GAAGF,iBAAH,GAAuBG,YAD7C;AAEE,IAAA,SAAS,EAAEP,MAAM,CAACS,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAOE;AACE,IAAA,OAAO,EAAEH,WAAW,GAAGC,YAAH,GAAkBH,iBADxC;AAEE,IAAA,SAAS,EAAEJ,MAAM,CAACS,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CAFJ,CADF;AAoBD;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,MAAM,EAAEM,KAAK,CAACC,OAAN,CAAcP,MADU;AAEhCC,EAAAA,WAAW,EAAEK,KAAK,CAACC,OAAN,CAAcN;AAFK,CAAL,CAA7B;;AAKA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,iBAAiB,EAAE,MAAMU,QAAQ,CAACZ,MAAM,CAACa,2BAAP,EAAD,CADK;AAEtCR,EAAAA,YAAY,EAAE,MAAMO,QAAQ,CAACZ,MAAM,CAACc,sBAAP,EAAD;AAFU,CAAL,CAAnC;;AAKA,eAAef,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,aAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./AreaWeekMonth.module.sass\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../../../redux/action/ActionCreators\";\r\n\r\nfunction AreaWeekMonth({\r\n  \r\n  changeActiveMonth,\r\n  isOpen,\r\n  activeMonth,\r\n  changeIsOpen\r\n}) {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className={styles.container}>\r\n          <button\r\n            onClick={activeMonth ? changeActiveMonth : changeIsOpen}\r\n            className={styles.button}\r\n          >\r\n            This week\r\n          </button>\r\n          <button\r\n            onClick={activeMonth ? changeIsOpen : changeActiveMonth}\r\n            className={styles.button}\r\n          >\r\n            This month\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  isOpen: store.reducer.isOpen,\r\n  activeMonth: store.reducer.activeMonth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeActiveMonth: () => dispatch(action.activeMonthWeekSwitchAction()),\r\n  changeIsOpen: () => dispatch(action.openTabWeekMonthAction())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaWeekMonth);\r\n"]},"metadata":{},"sourceType":"module"}