{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as api from '../../api/apiService';\nimport ACTION from '../action/actionTypes';\nimport { history } from \"../../utils/history\";\nexport function* loginSaga(action) {\n  yield put({\n    type: ACTION.LOGIN_REQUEST\n  });\n  const authData = action.data;\n\n  try {\n    const {\n      data\n    } = yield api.loginApi(authData);\n    const accsessToken = data.accsessToken;\n    localStorage.getItem('token', accsessToken);\n    yield put({\n      type: ACTION.LOGIN_RESPONS,\n      authData: data\n    });\n    histori.push('/calendar');\n  } catch (e) {\n    yield put({\n      type: ACTION.LOGIN_ERROR,\n      message: 'Something went wrong'\n    });\n  }\n}","map":{"version":3,"sources":["D:/ItStep/Shrad/Shred/Shred.FrontEnd/src/redux/sagas/authSaga.js"],"names":["put","api","ACTION","history","loginSaga","action","type","LOGIN_REQUEST","authData","data","loginApi","accsessToken","localStorage","getItem","LOGIN_RESPONS","histori","push","e","LOGIN_ERROR","message"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AAEA,OAAO,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC/B,QAAML,GAAG,CAAC;AAACM,IAAAA,IAAI,EAAEJ,MAAM,CAACK;AAAd,GAAD,CAAT;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAACI,IAAxB;;AAEA,MAAG;AACC,UAAM;AAACA,MAAAA;AAAD,QAAS,MAAMR,GAAG,CAACS,QAAJ,CAAaF,QAAb,CAArB;AACA,UAAMG,YAAY,GAAGF,IAAI,CAACE,YAA1B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,YAA9B;AACA,UAAMX,GAAG,CAAC;AAACM,MAAAA,IAAI,EAAEJ,MAAM,CAACY,aAAd;AAA6BN,MAAAA,QAAQ,EAAEC;AAAvC,KAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACH,GAND,CAMC,OAAOC,CAAP,EAAU;AACP,UAAMjB,GAAG,CAAC;AAACM,MAAAA,IAAI,EAAEJ,MAAM,CAACgB,WAAd;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAD,CAAT;AACH;AACJ","sourcesContent":["import {put} from 'redux-saga/effects';\r\nimport * as api from '../../api/apiService';\r\nimport ACTION from '../action/actionTypes';\r\nimport {history} from \"../../utils/history\";\r\n\r\nexport function* loginSaga(action) {\r\n    yield put({type: ACTION.LOGIN_REQUEST});\r\n    const authData = action.data;\r\n    \r\n    try{\r\n        const {data} = yield api.loginApi(authData);\r\n        const accsessToken = data.accsessToken;\r\n        localStorage.getItem('token', accsessToken);\r\n        yield put({type: ACTION.LOGIN_RESPONS, authData: data});\r\n        histori.push('/calendar');\r\n    }catch (e) {\r\n        yield put({type: ACTION.LOGIN_ERROR, message: 'Something went wrong'});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}