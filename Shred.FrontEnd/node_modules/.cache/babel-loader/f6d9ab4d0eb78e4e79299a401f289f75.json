{"ast":null,"code":"import ACTION from \"../action/actionTypes\";\nimport moment from \"moment\";\nconst initialState = {\n  isOpen: false,\n  activeMonth: true,\n  currentMonth: moment(),\n  isActiveDay: moment()\n};\nconsole.log(statecurrentMonth);\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACTION.OPEN_TAB_WEEK_MONTH:\n      return { ...state,\n        isOpen: !state.isOpen\n      };\n\n    case ACTION.ACTIVE_MONTH_SWITCH:\n      return { ...state,\n        activeMonth: !state.activeMonth,\n        isOpen: !state.isOpen\n      };\n\n    case ACTION.CHANGE_NEXT_MONTH:\n      return { ...state,\n        isActiveDay: moment(1)\n      };\n\n    case ACTION.CHANGE_PREW_MONTH:\n      return { ...state,\n        currentMonth: state.currentMonth.add(-1, state.activeMonth ? \"M\" : \"w\"),\n        isActiveDay: moment(1)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/ItStep/Shrad/src/redux/reducer/reducer.js"],"names":["ACTION","moment","initialState","isOpen","activeMonth","currentMonth","isActiveDay","console","log","statecurrentMonth","state","action","type","OPEN_TAB_WEEK_MONTH","ACTIVE_MONTH_SWITCH","CHANGE_NEXT_MONTH","CHANGE_PREW_MONTH","add"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,YAAY,EAAEJ,MAAM,EAHD;AAInBK,EAAAA,WAAW,EAAEL,MAAM;AAJA,CAArB;AAMAM,OAAO,CAACC,GAAR,CAAYC,iBAAZ;AACA,eAAe,UAASC,KAAK,GAAGR,YAAjB,EAA+BS,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,MAAM,CAACa,mBAAZ;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,MAAM,EAAE,CAACO,KAAK,CAACP;AAFV,OAAP;;AAIF,SAAKH,MAAM,CAACc,mBAAZ;AACE,aAAO,EACL,GAAGJ,KADE;AAELN,QAAAA,WAAW,EAAE,CAACM,KAAK,CAACN,WAFf;AAGLD,QAAAA,MAAM,EAAE,CAACO,KAAK,CAACP;AAHV,OAAP;;AAKF,SAAKH,MAAM,CAACe,iBAAZ;AACE,aAAO,EACL,GAAGL,KADE;AAGLJ,QAAAA,WAAW,EAAEL,MAAM,CAAC,CAAD;AAHd,OAAP;;AAKF,SAAKD,MAAM,CAACgB,iBAAZ;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,YAAY,EAAEK,KAAK,CAACL,YAAN,CAAmBY,GAAnB,CAAuB,CAAC,CAAxB,EAA2BP,KAAK,CAACN,WAAN,GAAoB,GAApB,GAA0B,GAArD,CAFX;AAGHE,QAAAA,WAAW,EAAEL,MAAM,CAAC,CAAD;AAHhB,OAAP;;AAKJ;AACE,aAAOS,KAAP;AAzBJ;AA2BD","sourcesContent":["import ACTION from \"../action/actionTypes\";\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  activeMonth: true,\r\n  currentMonth: moment(),\r\n  isActiveDay: moment()\r\n};\r\nconsole.log(statecurrentMonth)\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION.OPEN_TAB_WEEK_MONTH:\r\n      return {\r\n        ...state,\r\n        isOpen: !state.isOpen\r\n      };\r\n    case ACTION.ACTIVE_MONTH_SWITCH:\r\n      return {\r\n        ...state,\r\n        activeMonth: !state.activeMonth,\r\n        isOpen: !state.isOpen\r\n      };\r\n    case ACTION.CHANGE_NEXT_MONTH:\r\n      return {\r\n        ...state,\r\n       \r\n        isActiveDay: moment(1)\r\n      };\r\n    case ACTION.CHANGE_PREW_MONTH:\r\n        return {\r\n            ...state,\r\n            currentMonth: state.currentMonth.add(-1, state.activeMonth ? \"M\" : \"w\"),\r\n            isActiveDay: moment(1)\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}