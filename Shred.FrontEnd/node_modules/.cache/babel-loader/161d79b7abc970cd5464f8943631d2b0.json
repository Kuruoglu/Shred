{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\AreaCalendarWeek.js\";\nimport React from 'react';\nimport Band from './Band';\nimport moment from 'moment';\nimport styles from './AreaCalendarWeek.module.sass';\nimport PropTypes from 'prop-types';\n\nfunction AreaCalendarWeek({\n  currentMonth,\n  activeMonth,\n  currentDate,\n  changeActiveDay,\n  isActiveDay,\n  events,\n  currentStateMonth\n}) {\n  const renderCalendar = () => {\n    const calendar = [];\n\n    for (let i = 1; i < (activeMonth ? 7 : 2); i++) {\n      calendar.push(renderWeek(currentMonth.format(\"YYYY\"), i));\n    }\n\n    return calendar;\n  };\n\n  const renderWeek = (year, week) => {\n    const weekDays = [1, 2, 3, 4, 5, 6, 7];\n    const weekDates = weekDays.map(weekDay => weekDay);\n    return React.createElement(\"div\", {\n      key: week,\n      className: styles.weekRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, weekDates.map(item => {\n      const startMonthDay = currentStateMonth;\n      const monthFirstDay = moment(startMonthDay).startOf(activeMonth ? 'month' : 'week');\n      const weekFirstday = moment(monthFirstDay).add(week - 1, 'week').startOf('week').isoWeekday(6);\n      const date = weekFirstday.add(item, 'day');\n\n      const currentActiveDay = () => changeActiveDay(date);\n\n      return React.createElement(\"div\", {\n        key: date.format(\"D\"),\n        className: date.format('D MMM YY') === isActiveDay.format('D MMM YY') && date.format('MMM YYYY') === startMonthDay.format('MMM YYYY') ? styles.dayCellActive : styles.dayCell,\n        onClick: currentActiveDay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: date.format(\"D MMM YY\") === currentDate.format(\"D MMM YY\") ? styles.activeDate : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, activeMonth ? date.format(\"MMMM\") === startMonthDay.format('MMMM') && date.format(\"D\") : date.format(\"D\")), React.createElement(Band, {\n        events: events,\n        data: date,\n        currentStateMonth: currentStateMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, renderCalendar());\n}\n\nAreaCalendarWeek.defaultProps = {\n  renderWeekMonth: () => {},\n  currentMonth: moment(),\n  currentDate: moment(),\n  changeActiveDay: () => {},\n  isActiveDay: moment(),\n  events: []\n};\nAreaCalendarWeek.propTypes = {\n  renderWeekMonth: PropTypes.func.isRequired,\n  changeActiveDay: PropTypes.func.isRequired,\n  events: PropTypes.object.isRequired\n};\nexport default AreaCalendarWeek;","map":{"version":3,"sources":["D:/React/Shrad/src/components/Calendar/AreaCalendarWeek.js"],"names":["React","Band","moment","styles","PropTypes","AreaCalendarWeek","currentMonth","activeMonth","currentDate","changeActiveDay","isActiveDay","events","currentStateMonth","renderCalendar","calendar","i","push","renderWeek","format","year","week","weekDays","weekDates","map","weekDay","weekRow","item","startMonthDay","monthFirstDay","startOf","weekFirstday","add","isoWeekday","date","currentActiveDay","dayCellActive","dayCell","activeDate","container","defaultProps","renderWeekMonth","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Band from './Band';\r\nimport moment from 'moment';\r\nimport styles from './AreaCalendarWeek.module.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AreaCalendarWeek({currentMonth, activeMonth, currentDate, changeActiveDay, isActiveDay, events, currentStateMonth}) {   \r\n    const renderCalendar = () => {\r\n        const calendar = [];\r\n        for(let i = 1; i< (activeMonth ? 7 : 2); i++) {\r\n            calendar.push(\r\n                renderWeek(currentMonth.format(\"YYYY\"), i)\r\n            );\r\n        }\r\n        return (\r\n            calendar\r\n        );\r\n    }\r\n    const renderWeek = (year, week) => {\r\n        const weekDays = [1, 2, 3, 4, 5, 6, 7];\r\n        const weekDates = weekDays.map(weekDay => weekDay);\r\n        return( \r\n        <div key={week} className={styles.weekRow}>\r\n            {weekDates.map((item) => {\r\n                const startMonthDay = currentStateMonth;  \r\n                const monthFirstDay = moment(startMonthDay).startOf(activeMonth ? 'month' : 'week');\r\n                const weekFirstday = moment(monthFirstDay).add(week-1, 'week').startOf('week').isoWeekday(6);\r\n                const date = weekFirstday.add(item, 'day');               \r\n                const currentActiveDay = () => changeActiveDay(date);\r\n\r\n                return (\r\n                    <div \r\n                        key={date.format(\"D\")} \r\n                        className={ (date.format('D MMM YY') ===  isActiveDay.format('D MMM YY') \r\n                            && date.format('MMM YYYY') === startMonthDay.format('MMM YYYY'))  ? styles.dayCellActive : styles.dayCell} \r\n                            onClick={currentActiveDay}>                       \r\n                        <p className={date.format(\"D MMM YY\") === currentDate.format(\"D MMM YY\") ? styles.activeDate : ''}>\r\n                            {activeMonth ? (date.format(\"MMMM\") === startMonthDay.format('MMMM')) && date.format(\"D\") : date.format(\"D\")}\r\n                        </p>\r\n                        <Band events={events}  data={date} currentStateMonth={currentStateMonth}/>\r\n\r\n                    </div>\r\n                   \r\n                )\r\n            })}\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    return(       \r\n        <div className={styles.container}>\r\n            {renderCalendar()}          \r\n        </div>\r\n    );\r\n}\r\nAreaCalendarWeek.defaultProps = {\r\n    renderWeekMonth: () => {},\r\n    currentMonth: moment(),\r\n    currentDate: moment(),\r\n    changeActiveDay: () => {},\r\n    isActiveDay: moment(),\r\n    events: []\r\n  };\r\n  \r\nAreaCalendarWeek.propTypes = {\r\n    renderWeekMonth: PropTypes.func.isRequired,    \r\n    changeActiveDay: PropTypes.func.isRequired,\r\n    events: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AreaCalendarWeek;"]},"metadata":{},"sourceType":"module"}