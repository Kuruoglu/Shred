{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\components\\\\AreaWeekMonth.js\";\nimport React from \"react\";\nimport styles from \"./AreaWeekMonth.module.sass\";\nimport { connect } from 'react-redux';\nimport * as action from '../../../redux/action/ActionCreators';\n\nfunction AreaWeekMonth({\n  chengeWeek,\n  chengeMonth,\n  changeActiveMonth,\n  isOpen,\n  activeMonth,\n  changeIsOpen\n}) {\n  // const chengeWeek = () => {\n  //   if(this.state.activeMonth) {\n  //     this.setState({          \n  //       activeMonth: !this.state.activeMonth,\n  //       isOpen: !this.state.isOpen,          \n  //   })\n  //   }else {\n  //     this.setState({          \n  //       isOpen: !this.state.isOpen\n  //     })\n  //   }      \n  // }\n  return React.createElement(React.Fragment, null, isOpen && React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: activeMonth ? changeIsOpen : changeActiveMonth,\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"This week\"), React.createElement(\"button\", {\n    onClick: activeMonth ? changeIsOpen : changeActiveMonth,\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"This month\")));\n}\n\nconst mapStateToProps = store => ({\n  isOpen: store.reducer.isOpen,\n  activeMonth: store.reducer.activeMonth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeActiveMonth: () => dispatch(action.activeMonthWeekSwitchAction()),\n  changeIsOpen: () => dispatch(action.openTabWeekMonthAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaWeekMonth);","map":{"version":3,"sources":["D:/ItStep/Shrad/src/components/Calendar/components/AreaWeekMonth.js"],"names":["React","styles","connect","action","AreaWeekMonth","chengeWeek","chengeMonth","changeActiveMonth","isOpen","activeMonth","changeIsOpen","container","button","mapStateToProps","store","reducer","mapDispatchToProps","dispatch","activeMonthWeekSwitchAction","openTabWeekMonthAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAMC,MAAb,MAAyB,sCAAzB;;AAIC,SAASC,aAAT,CAAuB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA,iBAA1B;AAA6CC,EAAAA,MAA7C;AAAqDC,EAAAA,WAArD;AAAkEC,EAAAA;AAAlE,CAAvB,EAAwG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACE,0CACCF,MAAM,IACL;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACU,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEF,WAAW,GAAGC,YAAH,GAAmBH,iBAA/C;AAAkE,IAAA,SAAS,EAAEN,MAAM,CAACW,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAQ,IAAA,OAAO,EAAEH,WAAW,GAAGC,YAAH,GAAmBH,iBAA/C;AAAkE,IAAA,SAAS,EAAEN,MAAM,CAACW,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAFF,CADF;AAcD;;AAED,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,MAAM,EAAEM,KAAK,CAACC,OAAN,CAAcP,MADY;AAElCC,EAAAA,WAAW,EAAEK,KAAK,CAACC,OAAN,CAAcN;AAFO,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,iBAAiB,EAAE,MAAMU,QAAQ,CAACd,MAAM,CAACe,2BAAP,EAAD,CADK;AAEtCR,EAAAA,YAAY,EAAE,MAAMO,QAAQ,CAACd,MAAM,CAACgB,sBAAP,EAAD;AAFU,CAAL,CAAnC;;AAKA,eAAejB,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,aAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./AreaWeekMonth.module.sass\";\r\nimport {connect} from 'react-redux';\r\nimport * as  action from '../../../redux/action/ActionCreators';\r\n\r\n\r\n\r\n function AreaWeekMonth({chengeWeek, chengeMonth, changeActiveMonth, isOpen, activeMonth, changeIsOpen}) {\r\n  // const chengeWeek = () => {\r\n  //   if(this.state.activeMonth) {\r\n  //     this.setState({          \r\n  //       activeMonth: !this.state.activeMonth,\r\n  //       isOpen: !this.state.isOpen,          \r\n  //   })\r\n  //   }else {\r\n  //     this.setState({          \r\n  //       isOpen: !this.state.isOpen\r\n  //     })\r\n  //   }      \r\n  // }\r\n  return (\r\n    <>\r\n    {isOpen && (\r\n      <div className={styles.container}>\r\n        <button onClick={activeMonth ? changeIsOpen :  changeActiveMonth} className={styles.button}>\r\n          This week\r\n        </button>\r\n        <button onClick={activeMonth ? changeIsOpen :  changeActiveMonth} className={styles.button}>\r\n          This month\r\n        </button>\r\n      </div>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  isOpen: store.reducer.isOpen, \r\n  activeMonth: store.reducer.activeMonth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeActiveMonth: () => dispatch(action.activeMonthWeekSwitchAction()),\r\n  changeIsOpen: () => dispatch(action.openTabWeekMonthAction())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaWeekMonth);\r\n"]},"metadata":{},"sourceType":"module"}