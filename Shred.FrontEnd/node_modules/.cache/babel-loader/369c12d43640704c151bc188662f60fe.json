{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport AreaEvents from './AreaEvents';\nimport styles from './Calendar.module.sass';\nimport AreaTeam from './components/AreaTeam';\nimport AreaCalendarWeek from './AreaCalendarWeek';\nimport AreaOfMonth from './components/AreaOfMonth';\nimport AreaWeekMonth from './components/AreaWeekMonth';\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentMonth: moment(),\n      currentDate: moment(),\n      activeMonth: true,\n      isActiveDay: moment()\n    };\n\n    this.handleClickChangeActiveDay = key => {\n      this.setState({\n        isActiveDay: key\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.currentDate.format(\"D\"));\n    const events = new Map();\n    events.set('23.01.2020', [{\n      id: 1,\n      category: 'Rest',\n      time: '10:30',\n      nameEvents: 'Birthday',\n      eventsGo: true\n    }, {\n      id: 2,\n      category: 'Work',\n      time: '11:00',\n      nameEvents: 'ToDoSomthing',\n      eventsGo: false\n    }, {\n      id: 3,\n      category: 'Rest',\n      time: '13:00',\n      nameEvents: 'Reed book',\n      eventsGo: false\n    }, {\n      id: 4,\n      category: 'Rest',\n      time: '14:00',\n      nameEvents: 'Dinner',\n      eventsGo: false\n    }, {\n      id: 5,\n      category: 'Work',\n      time: '16:00',\n      nameEvents: 'Meet Client',\n      eventsGo: true\n    }, {\n      id: 6,\n      category: 'Work',\n      time: '17:00',\n      nameEvents: 'Go to office',\n      eventsGo: false\n    }, {\n      id: 7,\n      category: 'Rest',\n      time: '18:00',\n      nameEvents: 'Birthday',\n      eventsGo: false\n    }]);\n    events.set('3.01.2020', [{\n      id: 1,\n      category: 'Rest',\n      time: '10:30',\n      nameEvents: 'Birthday',\n      eventsGo: false\n    }, {\n      id: 2,\n      category: 'Work',\n      time: '11:00',\n      nameEvents: 'ToDoSomthing',\n      eventsGo: false\n    }, {\n      id: 3,\n      category: 'Rest',\n      time: '13:00',\n      nameEvents: 'Reed book',\n      eventsGo: true\n    }, {\n      id: 4,\n      category: 'Rest',\n      time: '14:00',\n      nameEvents: 'Dinner',\n      eventsGo: false\n    }]);\n    events.set('5.01.2020', [{\n      id: 1,\n      category: 'Rest',\n      time: '10:30',\n      nameEvents: 'Birthday',\n      eventsGo: false\n    }, {\n      id: 2,\n      category: 'Work',\n      time: '11:00',\n      nameEvents: 'ToDoSomthing',\n      eventsGo: true\n    }]);\n    events.set('9.02.2020', [{\n      id: 1,\n      category: 'Rest',\n      time: '10:30',\n      nameEvents: 'Birthday',\n      eventsGo: false\n    }]);\n    const clonCurrentMonth = moment(this.state.currentMonth);\n    return React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(AreaTeam, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(AreaOfMonth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(AreaWeekMonth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(AreaCalendarWeek, {\n      currentDate: this.state.currentDate,\n      changeActiveDay: this.handleClickChangeActiveDay,\n      isActiveDay: this.state.isActiveDay,\n      events: events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(AreaEvents, {\n      events: events,\n      currentDate: this.state.currentDate,\n      currentMonth: clonCurrentMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["D:/ItStep/Shrad/src/components/Calendar/Calendar.js"],"names":["React","moment","AreaEvents","styles","AreaTeam","AreaCalendarWeek","AreaOfMonth","AreaWeekMonth","Calendar","Component","state","currentMonth","currentDate","activeMonth","isActiveDay","handleClickChangeActiveDay","key","setState","render","console","log","format","events","Map","set","id","category","time","nameEvents","eventsGo","clonCurrentMonth","container"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport AreaEvents from './AreaEvents';\r\nimport styles from './Calendar.module.sass';\r\nimport AreaTeam from './components/AreaTeam';\r\nimport AreaCalendarWeek from './AreaCalendarWeek';\r\nimport AreaOfMonth from './components/AreaOfMonth';\r\nimport AreaWeekMonth from './components/AreaWeekMonth';\r\n\r\nclass Calendar extends React.Component {\r\n    state = {\r\n      currentMonth: moment(),\r\n      currentDate: moment(), \r\n      activeMonth: true,\r\n      isActiveDay: moment()   \r\n    }  \r\n     \r\n    handleClickChangeActiveDay = (key) => {\r\n      this.setState({         \r\n        isActiveDay: key,              \r\n      })      \r\n    }  \r\n    render() {\r\n      console.log(this.state.currentDate.format(\"D\"))\r\n      const events = new Map();\r\n      events.set('23.01.2020', [\r\n        {id: 1, category: 'Rest', time: '10:30', nameEvents: 'Birthday', eventsGo: true},\r\n        {id: 2, category: 'Work', time: '11:00', nameEvents: 'ToDoSomthing', eventsGo: false},\r\n        {id: 3, category: 'Rest', time: '13:00', nameEvents: 'Reed book', eventsGo: false},\r\n        {id: 4, category: 'Rest', time: '14:00', nameEvents: 'Dinner', eventsGo: false},\r\n        {id: 5, category: 'Work', time: '16:00', nameEvents: 'Meet Client', eventsGo: true},\r\n        {id: 6, category: 'Work', time: '17:00', nameEvents: 'Go to office', eventsGo: false},\r\n        {id: 7, category: 'Rest', time: '18:00', nameEvents: 'Birthday', eventsGo: false},\r\n      ])\r\n      events.set('3.01.2020', [\r\n        {id: 1, category: 'Rest', time: '10:30', nameEvents: 'Birthday', eventsGo: false},\r\n        {id: 2, category: 'Work', time: '11:00', nameEvents: 'ToDoSomthing', eventsGo: false},\r\n        {id: 3, category: 'Rest', time: '13:00', nameEvents: 'Reed book', eventsGo: true},\r\n        {id: 4, category: 'Rest', time: '14:00', nameEvents: 'Dinner', eventsGo: false},\r\n      ])\r\n      events.set('5.01.2020', [\r\n        {id: 1, category: 'Rest', time: '10:30', nameEvents: 'Birthday', eventsGo: false},\r\n        {id: 2, category: 'Work', time: '11:00', nameEvents: 'ToDoSomthing', eventsGo: true},\r\n      ])\r\n      events.set('9.02.2020', [\r\n        {id: 1, category: 'Rest', time: '10:30', nameEvents: 'Birthday', eventsGo: false},\r\n      ]) \r\n\r\n      const clonCurrentMonth = moment(this.state.currentMonth);\r\n     \r\n        return(\r\n          <div className={styles.container}> \r\n            < AreaTeam />\r\n            < AreaOfMonth  />\r\n            <AreaWeekMonth />\r\n          \r\n            <AreaCalendarWeek \r\n            currentDate={this.state.currentDate} \r\n            changeActiveDay={this.handleClickChangeActiveDay}\r\n            isActiveDay={this.state.isActiveDay} \r\n            events={events} \r\n            />\r\n            \r\n            <AreaEvents \r\n            events={events}\r\n            currentDate={this.state.currentDate}\r\n            currentMonth={clonCurrentMonth}\r\n            />\r\n          </div>\r\n\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}