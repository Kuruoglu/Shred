{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\Shred.FrontEnd\\\\src\\\\pages\\\\LoginPage\\\\LoginPage.js\";\nimport React from 'react';\nimport styles from './LoginPage.module.sass';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport arrow from '../../assets/img/arrow-left.png';\nimport { Link } from 'react-router-dom';\n\nconst LoginPage = () => React.createElement(\"div\", {\n  className: styles.container,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/\",\n  className: styles.arrow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: arrow,\n  alt: \"arrow\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: styles.logiForm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.sircle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(\"h1\", {\n  className: styles.loginText,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Login\"), React.createElement(Formik, {\n  initialValues: {\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    console.log(values);\n    const errors = {};\n    let regEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    let regPas = /^[\\S]{4,8}/mg;\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!regEmail.test(values.email)) {\n      errors.email = 'Invalid email address';\n    } else if (!values.password) {\n      errors.password = 'Required';\n    } else if (!regPas.test(values.password)) {\n      errors.password = 'Invalid password';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, ({\n  isSubmitting,\n  isValidating\n}) => React.createElement(Form, {\n  className: styles.formStyle,\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(Field, {\n  className: styles.inputStyle,\n  type: \"email\",\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: styles.error,\n  name: \"email\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(Field, {\n  className: styles.inputStyle,\n  type: \"password\",\n  name: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: styles.error,\n  name: \"password\",\n  component: \"div\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  className: isValidating ? styles.loginButton : styles.loginButtonActive,\n  type: \"submit\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"LOGIN\"), React.createElement(\"p\", {\n  className: styles.memberPass,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Forgot password?\")))));\n\nexport default LoginPage;","map":{"version":3,"sources":["D:/ItStep/Shrad/Shred.FrontEnd/src/pages/LoginPage/LoginPage.js"],"names":["React","styles","Formik","Form","Field","ErrorMessage","arrow","Link","LoginPage","container","logiForm","sircle","loginText","email","password","values","console","log","errors","regEmail","regPas","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","isValidating","formStyle","onSubmit","inputStyle","error","loginButton","loginButtonActive","memberPass"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styles from './LoginPage.module.sass';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport arrow from '../../assets/img/arrow-left.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst LoginPage = () => (\r\n  <div className={styles.container}>\r\n   <Link to='/' className={styles.arrow}><img  src={arrow} alt='arrow'/></Link>\r\n    \r\n    <div className={styles.logiForm}>\r\n    <div className={styles.sircle} />\r\n    <h1 className={styles.loginText}>Login</h1>\r\n    <Formik \r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        console.log(values)\r\n        const errors = {};\r\n        let regEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n        let regPas = /^[\\S]{4,8}/mg\r\n        \r\n          if(!values.email) {\r\n            errors.email = 'Required';\r\n          }else if(!regEmail.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n          }else if(!values.password) {\r\n            errors.password = 'Required';\r\n          }else if(!regPas.test(values.password)) {\r\n            errors.password = 'Invalid password';\r\n          }\r\n       \r\n        return errors;\r\n      }}\r\n     \r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        \r\n        isSubmitting,\r\n        isValidating\r\n      }) => (\r\n        <Form className={styles.formStyle} onSubmit={onSubmit}>\r\n          <Field className={styles.inputStyle} type=\"email\" name=\"email\" />\r\n          <ErrorMessage className={styles.error} name=\"email\" component=\"div\" />\r\n          <Field className={styles.inputStyle} type=\"password\" name=\"password\" />\r\n          <ErrorMessage className={styles.error} name=\"password\" component=\"div\" />\r\n          <button className={isValidating ? styles.loginButton : styles.loginButtonActive} type=\"submit\" disabled={isSubmitting}>\r\n          LOGIN\r\n          </button>\r\n          <p className={styles.memberPass}>Forgot password?</p>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n);\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}