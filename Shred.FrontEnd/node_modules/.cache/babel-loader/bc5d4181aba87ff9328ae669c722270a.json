{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItStep\\\\Shrad\\\\src\\\\components\\\\Calendar\\\\components\\\\AreaOfMonth.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport styles from \"./AreaOfMonth.module.sass\";\nimport arrowUp from \"../../../assets/img/chevron-up.png\";\nimport arrowDown from \"../../../assets/img/chevron-down.png\";\nimport { connect } from 'react-redux';\nimport * as action from '../../../redux/action/ActionCreators';\n\nfunction AreaOfMonth({\n  changeIsOpen,\n  changePrevMonth,\n  changeNextMonth,\n  isOpen,\n  activeMonth,\n  currentStateMonth\n}) {\n  const clonState = moment(currentStateMonth);\n  const firstDayWeek = clonState.startOf('week').format(\"D\");\n  const lastDayWeek = clonState.endOf('week').format(\"D\");\n  const textPrew = 'Prew';\n  const textNext = 'Next';\n  const prewMonth = clonState.add(-1, \"M\").format(\"MMM\");\n  const curMonth = currentStateMonth.format(activeMonth ? \"MMMM\" : `MMM ${firstDayWeek} - ${lastDayWeek} `);\n  const nextMonth = clonState.add(2, \"M\").format(\"MMM\");\n  const daysWeek = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]; // changePrevMonth = () => {\n  //   let month = this.state.currentMonth;\n  //   month.add(-1, this.state.activeMonth ? \"M\" : \"w\");\n  //   this.setState({\n  //     currentMonth: month,\n  //     isActiveDay: moment(1)\n  //   })\n  // }\n  // ChangeNextMonth = () => {\n  //   let month = this.state.currentMonth;\n  //   month.add(1, this.state.activeMonth ? \"M\" : \"w\");\n  //   this.setState({\n  //     currentMonth: month, \n  //     isActiveDay: moment(1)\n  //   })\n  // }\n\n  const renderWeekDays = (item, key) => {\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item);\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.containerIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.textMonth,\n    onClick: changePrevMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, activeMonth ? prewMonth : textPrew), React.createElement(\"div\", {\n    className: styles.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: changeIsOpen,\n    className: styles.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, curMonth), React.createElement(\"img\", {\n    onClick: changeIsOpen,\n    className: styles.arrow,\n    src: isOpen ? arrowUp : arrowDown,\n    alt: \"arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: styles.textMonth,\n    onClick: changeNextMonth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, activeMonth ? nextMonth : textNext)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, !isOpen && React.createElement(\"div\", {\n    className: styles.daysWeek,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, daysWeek.map(renderWeekDays))));\n}\n\nAreaOfMonth.defaultProps = {\n  renderWeekMonth: () => {},\n  currentMonth: moment(),\n  currentStateMonth: () => {},\n  changePrevMonth: () => {},\n  changeNextMonth: () => {},\n  isOpen: false,\n  activeMonth: true\n};\nAreaOfMonth.propTypes = {\n  renderWeekMonth: PropTypes.func.isRequired,\n  currentStateMonth: PropTypes.object.isRequired,\n  changePrevMonth: PropTypes.func.isRequired,\n  changeNextMonth: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  activeMonth: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = store => ({\n  isOpen: store.reducer.isOpen,\n  activeMonth: store.reducer.activeMonth,\n  currentStateMonth: store.reducer.currentMonth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeIsOpen: () => dispatch(action.openTabWeekMonthAction()),\n  changeNextMonth: () => dispatch(action.changeNextMonth()),\n  changePrevMonth: () => dispatch(action.changePrewMonth())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaOfMonth);","map":{"version":3,"sources":["D:/ItStep/Shrad/src/components/Calendar/components/AreaOfMonth.js"],"names":["React","moment","PropTypes","styles","arrowUp","arrowDown","connect","action","AreaOfMonth","changeIsOpen","changePrevMonth","changeNextMonth","isOpen","activeMonth","currentStateMonth","clonState","firstDayWeek","startOf","format","lastDayWeek","endOf","textPrew","textNext","prewMonth","add","curMonth","nextMonth","daysWeek","renderWeekDays","item","key","container","containerIn","textMonth","current","active","arrow","map","defaultProps","renderWeekMonth","currentMonth","propTypes","func","isRequired","object","bool","mapStateToProps","store","reducer","mapDispatchToProps","dispatch","openTabWeekMonthAction","changePrewMonth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport PropTypes  from 'prop-types';\r\nimport styles from \"./AreaOfMonth.module.sass\";\r\nimport arrowUp from \"../../../assets/img/chevron-up.png\";\r\nimport arrowDown from \"../../../assets/img/chevron-down.png\";\r\nimport {connect} from 'react-redux'; \r\nimport * as action from '../../../redux/action/ActionCreators'\r\n\r\n\r\nfunction AreaOfMonth({changeIsOpen, changePrevMonth, changeNextMonth, isOpen, activeMonth, currentStateMonth}) {\r\n  const clonState = moment(currentStateMonth)\r\n  const firstDayWeek = clonState.startOf('week').format(\"D\");\r\n  const lastDayWeek = clonState.endOf('week').format(\"D\");\r\n  const textPrew = 'Prew';\r\n  const textNext = 'Next';\r\n  const prewMonth = clonState.add(-1, \"M\").format(\"MMM\");\r\n  const curMonth = currentStateMonth.format(activeMonth ? \"MMMM\" : `MMM ${firstDayWeek} - ${lastDayWeek} `);\r\n  const nextMonth = clonState.add(2, \"M\").format(\"MMM\");\r\n  const daysWeek = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n// changePrevMonth = () => {\r\n    //   let month = this.state.currentMonth;\r\n    //   month.add(-1, this.state.activeMonth ? \"M\" : \"w\");\r\n    //   this.setState({\r\n    //     currentMonth: month,\r\n    //     isActiveDay: moment(1)\r\n    //   })\r\n    // }\r\n    // ChangeNextMonth = () => {\r\n    //   let month = this.state.currentMonth;\r\n    //   month.add(1, this.state.activeMonth ? \"M\" : \"w\");\r\n    //   this.setState({\r\n    //     currentMonth: month, \r\n    //     isActiveDay: moment(1)\r\n    //   })\r\n    // }\r\n\r\n\r\n  const renderWeekDays = (item, key) => {\r\n    return <div key={key}>{item}</div>;\r\n  };\r\n  return (\r\n\r\n    <div className={styles.container}>\r\n\r\n      <div className={styles.containerIn}>\r\n        <p className={styles.textMonth} onClick={changePrevMonth}>\r\n          {activeMonth ? prewMonth : textPrew}\r\n        </p>\r\n        <div className={styles.current}>\r\n          <p onClick={changeIsOpen} className={styles.active}>\r\n            {curMonth}\r\n          </p>\r\n          <img\r\n            onClick={changeIsOpen}\r\n            className={styles.arrow}\r\n            src={isOpen ? arrowUp : arrowDown}\r\n            alt=\"arrow\"\r\n          />\r\n        </div>\r\n          <p className={styles.textMonth} onClick={changeNextMonth}>\r\n            {activeMonth ? nextMonth : textNext}\r\n          </p>\r\n      </div>\r\n      <div>\r\n        {!isOpen && (\r\n          <div className={styles.daysWeek}>{daysWeek.map(renderWeekDays)}</div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  );\r\n  \r\n}\r\n\r\nAreaOfMonth.defaultProps = {\r\n  renderWeekMonth: () => {},\r\n  currentMonth: moment(),\r\n  currentStateMonth: () => {},\r\n  changePrevMonth: () => {},\r\n  changeNextMonth: () => {},\r\n  isOpen: false,\r\n  activeMonth: true\r\n};\r\n\r\nAreaOfMonth.propTypes = {\r\n  renderWeekMonth: PropTypes.func.isRequired,\r\n  currentStateMonth: PropTypes.object.isRequired,\r\n  changePrevMonth: PropTypes.func.isRequired,\r\n  changeNextMonth: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  activeMonth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (store) => ({\r\n  isOpen: store.reducer.isOpen,\r\n  activeMonth: store.reducer.activeMonth,\r\n  currentStateMonth: store.reducer.currentMonth,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeIsOpen: () => dispatch(action.openTabWeekMonthAction()),\r\n    changeNextMonth: () => dispatch(action.changeNextMonth()),\r\n    changePrevMonth: () => dispatch(action.changePrewMonth()),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaOfMonth);\r\n"]},"metadata":{},"sourceType":"module"}